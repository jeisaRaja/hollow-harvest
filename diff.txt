diff --git a/components/inventory.tres b/components/inventory.tres
index c7d4ca6..185ddbe 100644
--- a/components/inventory.tres
+++ b/components/inventory.tres
@@ -1,11 +1,12 @@
-[gd_resource type="Resource" script_class="InventoryData" load_steps=7 format=3 uid="uid://bay5f6xdw48je"]
+[gd_resource type="Resource" script_class="InventoryData" load_steps=8 format=3 uid="uid://bay5f6xdw48je"]
 
-[ext_resource type="Script" path="res://resources/intentory_data.gd" id="1_3kb85"]
+[ext_resource type="Script" path="res://resources/inventory_data.gd" id="1_y2m2l"]
 [ext_resource type="Script" path="res://resources/slot_data.gd" id="2_l2i1e"]
 [ext_resource type="Resource" uid="uid://bvmdbohn6224w" path="res://scenes/items/log.tres" id="3_lfisw"]
 [ext_resource type="Resource" uid="uid://cxtgcmy7u0kgw" path="res://scenes/items/axe.tres" id="4_e7pk6"]
 
 [sub_resource type="Resource" id="Resource_8n2vj"]
+resource_local_to_scene = true
 script = ExtResource("2_l2i1e")
 item_data = ExtResource("3_lfisw")
 quantity = 4
@@ -15,6 +16,11 @@ script = ExtResource("2_l2i1e")
 item_data = ExtResource("4_e7pk6")
 quantity = 1
 
+[sub_resource type="Resource" id="Resource_vt8ty"]
+script = ExtResource("2_l2i1e")
+item_data = ExtResource("3_lfisw")
+quantity = 4
+
 [resource]
-script = ExtResource("1_3kb85")
-slot_datas = Array[ExtResource("2_l2i1e")]([SubResource("Resource_8n2vj"), null, null, SubResource("Resource_83bky"), null, null, null, null, null, null, null, null])
+script = ExtResource("1_y2m2l")
+slot_datas = Array[ExtResource("2_l2i1e")]([SubResource("Resource_8n2vj"), null, null, SubResource("Resource_83bky"), null, null, SubResource("Resource_vt8ty"), null, null, null, null, null])
diff --git a/diff.txt b/diff.txt
index 25dce13..e69de29 100644
--- a/diff.txt
+++ b/diff.txt
@@ -1,243 +0,0 @@
-diff --git a/.gitignore b/.gitignore
-index f92c499..40edd01 100644
---- a/.gitignore
-+++ b/.gitignore
-@@ -3,3 +3,4 @@
- /android/
- 
- *.aseprite
-+*.txt
-diff --git a/components/inventory.tres b/components/inventory.tres
-index 02e9dc8..c7d4ca6 100644
---- a/components/inventory.tres
-+++ b/components/inventory.tres
-@@ -8,12 +8,12 @@
- [sub_resource type="Resource" id="Resource_8n2vj"]
- script = ExtResource("2_l2i1e")
- item_data = ExtResource("3_lfisw")
--quantity = 2
-+quantity = 4
- 
- [sub_resource type="Resource" id="Resource_83bky"]
- script = ExtResource("2_l2i1e")
- item_data = ExtResource("4_e7pk6")
--quantity = 3
-+quantity = 1
- 
- [resource]
- script = ExtResource("1_3kb85")
-diff --git a/diff.txt b/diff.txt
-new file mode 100644
-index 0000000..e69de29
-diff --git a/globals/gameplay_event.gd b/globals/gameplay_event.gd
-new file mode 100644
-index 0000000..96e417a
---- /dev/null
-+++ b/globals/gameplay_event.gd
-@@ -0,0 +1,12 @@
-+extends Node
-+signal player_spawned(peer_id)
-+signal player_added
-+
-+var player: Player:
-+	set = set_player
-+
-+
-+func set_player(value):
-+	player = value
-+	player_added.emit()
-+	print("calling player added")
-diff --git a/project.godot b/project.godot
-index 79bf95f..20dacf7 100644
---- a/project.godot
-+++ b/project.godot
-@@ -11,7 +11,7 @@ config_version=5
- [application]
- 
- config/name="hollow-harvest"
--run/main_scene="res://scenes/ui/main_menu.tscn"
-+run/main_scene="res://scenes/ui/game.tscn"
- config/features=PackedStringArray("4.3", "GL Compatibility")
- config/icon="res://icon.svg"
- 
-@@ -21,6 +21,7 @@ Lobby="*res://globals/lobby.gd"
- PlayerInput="*res://globals/player_input.gd"
- DayNightCycleManager="*res://globals/day_night_cycle_manager.gd"
- ToolManager="*res://globals/tool_manager.gd"
-+GameplayEvent="*res://globals/gameplay_event.gd"
- 
- [display]
- 
-diff --git a/scenes/level.gd b/scenes/level.gd
-index fd09111..16f482f 100644
---- a/scenes/level.gd
-+++ b/scenes/level.gd
-@@ -34,6 +34,7 @@ func spawn_player(id):
- 	var player_instance = player_scene.instantiate() as Player
- 	player_instance.name = str(id)
- 	player_instance.position = get_spawn_point()
-+	GameplayEvent.player = player_instance
- 	return player_instance
- 
- 
-diff --git a/scenes/player/player.gd b/scenes/player/player.gd
-index 576cdbf..b7aca0a 100644
---- a/scenes/player/player.gd
-+++ b/scenes/player/player.gd
-@@ -4,6 +4,7 @@ extends Character
- @export var player_camera: PackedScene
- @export var movement: PlayerMovementComponent
- @export var hit_component: HitComponent
-+@export var inventory_data: InventoryData
- 
- var owner_id = 1
- var camera_instance: Camera2D
-@@ -20,6 +21,7 @@ func _enter_tree():
- func _ready():
- 	ToolManager.tool_selected.connect(_on_tool_selected)
- 
-+
- func _on_tool_selected(tool: DataTypes.Tools):
- 	current_tool = tool
- 	hit_component.current_tool = tool
-diff --git a/scenes/player/player.tscn b/scenes/player/player.tscn
-index 83a0d3d..a6e0b21 100644
---- a/scenes/player/player.tscn
-+++ b/scenes/player/player.tscn
-@@ -1,9 +1,10 @@
--[gd_scene load_steps=28 format=3 uid="uid://dgtaent0adqah"]
-+[gd_scene load_steps=29 format=3 uid="uid://dgtaent0adqah"]
- 
- [ext_resource type="Script" path="res://scenes/player/player.gd" id="1_2wf3d"]
- [ext_resource type="Texture2D" uid="uid://bis3jw7ymw50a" path="res://arts/player.png" id="1_fo3sf"]
- [ext_resource type="PackedScene" uid="uid://foo4k54k71f2" path="res://scenes/player/player_camera.tscn" id="2_e6xf5"]
- [ext_resource type="Script" path="res://components/movement.gd" id="2_gmcet"]
-+[ext_resource type="Resource" uid="uid://bay5f6xdw48je" path="res://components/inventory.tres" id="3_rrumk"]
- [ext_resource type="Script" path="res://components/state_machine/state_machine.gd" id="6_aw664"]
- [ext_resource type="Script" path="res://components/state_machine/idle.gd" id="7_3ywso"]
- [ext_resource type="Script" path="res://components/state_machine/chop.gd" id="8_gm067"]
-@@ -279,6 +280,7 @@ script = ExtResource("1_2wf3d")
- player_camera = ExtResource("2_e6xf5")
- movement = NodePath("MovementComponent")
- hit_component = NodePath("HitComponent")
-+inventory_data = ExtResource("3_rrumk")
- anim = NodePath("AnimationPlayer")
- 
- [node name="Sprite2D" type="Sprite2D" parent="."]
-diff --git a/scenes/ui/main_menu.gd b/scenes/ui/game.gd
-similarity index 93%
-rename from scenes/ui/main_menu.gd
-rename to scenes/ui/game.gd
-index 2266cea..e7df539 100644
---- a/scenes/ui/main_menu.gd
-+++ b/scenes/ui/game.gd
-@@ -10,6 +10,7 @@ extends Node
- @export var not_connected_ui: Control
- @export var host_ui: Control
- @export var on_game_ui: Control
-+@export var inventory_ui: Control
- 
- 
- func _ready():
-@@ -78,3 +79,7 @@ func hide_menu():
- func show_menu():
- 	ui.hide()
- 	not_connected_ui.show()
-+
-+
-+func _on_player_spawned(peer_id: int):
-+	print("player spawned: " + str(peer_id))
-diff --git a/scenes/ui/main_menu.tscn b/scenes/ui/game.tscn
-similarity index 78%
-rename from scenes/ui/main_menu.tscn
-rename to scenes/ui/game.tscn
-index 86a252a..047ec7c 100644
---- a/scenes/ui/main_menu.tscn
-+++ b/scenes/ui/game.tscn
-@@ -1,14 +1,15 @@
--[gd_scene load_steps=5 format=3 uid="uid://yt8ognp4raow"]
-+[gd_scene load_steps=6 format=3 uid="uid://yt8ognp4raow"]
- 
--[ext_resource type="Script" path="res://scenes/ui/main_menu.gd" id="1_mmqqp"]
--[ext_resource type="PackedScene" uid="uid://dwee5a4nroc6w" path="res://scenes/world.tscn" id="2_r7rji"]
--[ext_resource type="PackedScene" uid="uid://ftdtgk17m5yy" path="res://scenes/ui/day_night_panel.tscn" id="3_dg2qa"]
--[ext_resource type="PackedScene" uid="uid://bh8pj4pnorf2x" path="res://scenes/ui/tools_panel.tscn" id="4_x2ymn"]
-+[ext_resource type="Script" path="res://scenes/ui/game.gd" id="1_eleug"]
-+[ext_resource type="PackedScene" uid="uid://dwee5a4nroc6w" path="res://scenes/world.tscn" id="2_6oojn"]
-+[ext_resource type="PackedScene" uid="uid://ftdtgk17m5yy" path="res://scenes/ui/day_night_panel.tscn" id="3_dfwjs"]
-+[ext_resource type="PackedScene" uid="uid://bh8pj4pnorf2x" path="res://scenes/ui/tools_panel.tscn" id="4_cj2n2"]
-+[ext_resource type="PackedScene" uid="uid://55pp0lx1omi6" path="res://scenes/ui/inventory.tscn" id="5_mp8or"]
- 
--[node name="Menu" type="Node" node_paths=PackedStringArray("level_container", "ui", "ip_line_edit", "status_label", "not_connected_ui", "host_ui", "on_game_ui")]
--script = ExtResource("1_mmqqp")
-+[node name="Game" type="Node" node_paths=PackedStringArray("level_container", "ui", "ip_line_edit", "status_label", "not_connected_ui", "host_ui", "on_game_ui")]
-+script = ExtResource("1_eleug")
- level_container = NodePath("Level")
--level_scene = ExtResource("2_r7rji")
-+level_scene = ExtResource("2_6oojn")
- ui = NodePath("UI")
- ip_line_edit = NodePath("UI/NotConnected/HBoxContainer/TextEdit")
- status_label = NodePath("UI/StatusLabel")
-@@ -93,14 +94,14 @@ anchor_bottom = 1.0
- grow_horizontal = 2
- grow_vertical = 2
- 
--[node name="DayNightPanel" parent="CanvasLayer/OnGame" instance=ExtResource("3_dg2qa")]
-+[node name="DayNightPanel" parent="CanvasLayer/OnGame" instance=ExtResource("3_dfwjs")]
- layout_mode = 2
- anchors_preset = 0
- anchor_right = 0.0
- anchor_bottom = 0.0
- offset_right = 88.0
- 
--[node name="ToolsPanel" parent="CanvasLayer/OnGame" instance=ExtResource("4_x2ymn")]
-+[node name="ToolsPanel" parent="CanvasLayer/OnGame" instance=ExtResource("4_cj2n2")]
- layout_mode = 1
- anchors_preset = 2
- anchor_top = 1.0
-@@ -110,6 +111,17 @@ offset_right = 88.0
- offset_bottom = 0.0
- grow_vertical = 0
- 
-+[node name="InventoryUI" type="Control" parent="CanvasLayer/OnGame"]
-+layout_mode = 1
-+anchors_preset = 15
-+anchor_right = 1.0
-+anchor_bottom = 1.0
-+grow_horizontal = 2
-+grow_vertical = 2
-+
-+[node name="Inventory" parent="CanvasLayer/OnGame/InventoryUI" instance=ExtResource("5_mp8or")]
-+layout_mode = 0
-+
- [connection signal="pressed" from="UI/NotConnected/HBoxContainer/Host" to="." method="_on_host_pressed"]
- [connection signal="pressed" from="UI/NotConnected/HBoxContainer/Join" to="." method="_on_join_pressed"]
- [connection signal="pressed" from="UI/Host/HBoxContainer/Start" to="." method="_on_start_pressed"]
-diff --git a/scenes/ui/inventory.gd b/scenes/ui/inventory.gd
-index ffaaca3..bd28bdf 100644
---- a/scenes/ui/inventory.gd
-+++ b/scenes/ui/inventory.gd
-@@ -6,12 +6,20 @@ const slot = preload("res://scenes/ui/slot.tscn")
- 
- 
- func _ready():
--	var inv_data = preload("res://components/inventory.tres")
--	populate_item_grid(inv_data.slot_datas)
-+	print("ready in inventory")
-+	GameplayEvent.player_added.connect(_on_player_added)
-+
-+
-+func _on_player_added():
-+	print("called")
-+	set_player_inventory_data(GameplayEvent.player.inventory_data)
-+
-+
-+func set_player_inventory_data(inventory_data: InventoryData):
-+	populate_item_grid(inventory_data.slot_datas)
- 
- 
- func populate_item_grid(slot_datas: Array[SlotData]) -> void:
--	print(slot_datas)
- 	for child in item_grid.get_children():
- 		child.queue_free()
- 
diff --git a/globals/gameplay_event.gd b/globals/gameplay_event.gd
index 1a9c010..e515298 100644
--- a/globals/gameplay_event.gd
+++ b/globals/gameplay_event.gd
@@ -9,5 +9,5 @@ var player: Player:
 
 func set_player(value):
 	player = value
-	player_added.emit()
+	player_added.emit(int(player.name.to_int()))
 	print("calling player added")
diff --git a/resources/intentory_data.gd b/resources/intentory_data.gd
deleted file mode 100644
index 582b565..0000000
--- a/resources/intentory_data.gd
+++ /dev/null
@@ -1,9 +0,0 @@
-extends Resource
-class_name InventoryData
-
-signal inventory_interacted(inventory_data: InventoryData, index: int, button: int)
-@export var slot_datas: Array[SlotData]
-
-
-func on_slot_clicked(index: int, button: int):
-	inventory_interacted.emit(self, index, button)
diff --git a/resources/slot_data.gd b/resources/slot_data.gd
index 78cec1a..0fc4cc8 100644
--- a/resources/slot_data.gd
+++ b/resources/slot_data.gd
@@ -13,3 +13,29 @@ func set_quantity(value):
 	if quantity > 1 and not item_data.stackable:
 		quantity = 1
 		push_error("%s is not stackable, setting quantity to 1" % item_data.name)
+
+
+func can_merge_with(other_slot_data: SlotData) -> bool:
+	return (
+		item_data == other_slot_data.item_data and item_data.stackable and quantity < MAX_STACK_SIZE
+	)
+
+
+func can_fully_merge_with(other_slot_data: SlotData) -> bool:
+	return (
+		item_data == other_slot_data.item_data
+		and item_data.stackable
+		and quantity + other_slot_data.quantity < MAX_STACK_SIZE
+	)
+
+
+func create_single_slot_data() -> SlotData:
+	var new_slot_data = duplicate() as SlotData
+	new_slot_data.quantity = 1
+
+	quantity -= 1
+	return new_slot_data
+
+
+func fully_merge_with(other_slot_data: SlotData) -> void:
+	quantity += other_slot_data.quantity
diff --git a/scenes/items/axe.tres b/scenes/items/axe.tres
index 2f9f672..86d6eb6 100644
--- a/scenes/items/axe.tres
+++ b/scenes/items/axe.tres
@@ -1,11 +1,16 @@
-[gd_resource type="Resource" script_class="ItemData" load_steps=3 format=3 uid="uid://cxtgcmy7u0kgw"]
+[gd_resource type="Resource" script_class="ItemData" load_steps=4 format=3 uid="uid://cxtgcmy7u0kgw"]
 
 [ext_resource type="Script" path="res://resources/item_data.gd" id="1_adynd"]
-[ext_resource type="Texture2D" uid="uid://b3ss6vq2ki1om" path="res://scenes/items/small_objects.tres" id="2_1mkkd"]
+[ext_resource type="Texture2D" uid="uid://bgtd7f4w1noxi" path="res://arts/small_objects.png" id="2_53yjw"]
+
+[sub_resource type="AtlasTexture" id="AtlasTexture_8cuto"]
+atlas = ExtResource("2_53yjw")
+region = Rect2(0, 0, 16, 16)
 
 [resource]
+resource_local_to_scene = true
 script = ExtResource("1_adynd")
 name = "Axe"
 description = "Used to cut trees"
 stackable = false
-texture = ExtResource("2_1mkkd")
+texture = SubResource("AtlasTexture_8cuto")
diff --git a/scenes/items/log.tres b/scenes/items/log.tres
index 617a806..080b67e 100644
--- a/scenes/items/log.tres
+++ b/scenes/items/log.tres
@@ -4,6 +4,7 @@
 [ext_resource type="Texture2D" uid="uid://b3ss6vq2ki1om" path="res://scenes/items/small_objects.tres" id="2_g0ben"]
 
 [resource]
+resource_local_to_scene = true
 script = ExtResource("1_mmxq6")
 name = "Log"
 description = "A Log"
diff --git a/scenes/items/small_objects.tres b/scenes/items/small_objects.tres
index 508729a..ea4d2bd 100644
--- a/scenes/items/small_objects.tres
+++ b/scenes/items/small_objects.tres
@@ -3,5 +3,6 @@
 [ext_resource type="Texture2D" uid="uid://bgtd7f4w1noxi" path="res://arts/small_objects.png" id="1_0xbk2"]
 
 [resource]
+resource_local_to_scene = true
 atlas = ExtResource("1_0xbk2")
-region = Rect2(0, 0, 16, 16)
+region = Rect2(0, 16, 32, 16)
diff --git a/scenes/ui/game.tscn b/scenes/ui/game.tscn
index dfc5c6f..f695e59 100644
--- a/scenes/ui/game.tscn
+++ b/scenes/ui/game.tscn
@@ -1,4 +1,4 @@
-[gd_scene load_steps=7 format=3 uid="uid://yt8ognp4raow"]
+[gd_scene load_steps=8 format=3 uid="uid://yt8ognp4raow"]
 
 [ext_resource type="Script" path="res://scenes/ui/game.gd" id="1_eleug"]
 [ext_resource type="PackedScene" uid="uid://dwee5a4nroc6w" path="res://scenes/world.tscn" id="2_6oojn"]
@@ -6,6 +6,7 @@
 [ext_resource type="PackedScene" uid="uid://bh8pj4pnorf2x" path="res://scenes/ui/tools_panel.tscn" id="4_cj2n2"]
 [ext_resource type="PackedScene" uid="uid://55pp0lx1omi6" path="res://scenes/ui/inventory.tscn" id="5_mp8or"]
 [ext_resource type="Script" path="res://scenes/ui/inventory_ui.gd" id="5_wwbow"]
+[ext_resource type="PackedScene" uid="uid://cjfyuvxmw6d82" path="res://scenes/ui/slot.tscn" id="7_4mk3e"]
 
 [node name="Game" type="Node" node_paths=PackedStringArray("level_container", "ui", "ip_line_edit", "status_label", "not_connected_ui", "host_ui", "on_game_ui")]
 script = ExtResource("1_eleug")
@@ -138,6 +139,10 @@ offset_bottom = 20.0
 grow_horizontal = 2
 grow_vertical = 2
 
+[node name="GrabbedSlot" parent="CanvasLayer/OnGame/InventoryUI" instance=ExtResource("7_4mk3e")]
+visible = false
+layout_mode = 0
+
 [connection signal="pressed" from="UI/NotConnected/HBoxContainer/Host" to="." method="_on_host_pressed"]
 [connection signal="pressed" from="UI/NotConnected/HBoxContainer/Join" to="." method="_on_join_pressed"]
 [connection signal="pressed" from="UI/Host/HBoxContainer/Start" to="." method="_on_start_pressed"]
diff --git a/scenes/ui/inventory.gd b/scenes/ui/inventory.gd
index 44351f5..eac4233 100644
--- a/scenes/ui/inventory.gd
+++ b/scenes/ui/inventory.gd
@@ -5,20 +5,8 @@ const slot = preload("res://scenes/ui/slot.tscn")
 @onready var item_grid: GridContainer = %ItemGrid
 
 
-func _ready():
-	GameplayEvent.player_added.connect(_on_player_added)
-
-
-func _on_player_added():
-	set_player_inventory_data(GameplayEvent.player.inventory_data)
-
-
-func _on_inventory_interacted(inventory_data: InventoryData, index: int, button: int):
-	print("%s %s %s" % [inventory_data, index, button])
-
-
 func set_player_inventory_data(inventory_data: InventoryData):
-	inventory_data.inventory_interacted.connect(_on_inventory_interacted)
+	inventory_data.inventory_updated.connect(populate_item_grid)
 	populate_item_grid(inventory_data)
 
 
diff --git a/scenes/ui/inventory_ui.gd b/scenes/ui/inventory_ui.gd
index 0b56bbf..e71ca1b 100644
--- a/scenes/ui/inventory_ui.gd
+++ b/scenes/ui/inventory_ui.gd
@@ -1,13 +1,55 @@
 extends Control
 
+@onready var player_inventory = $PlayerInventory
+@onready var grabbed_slot = $GrabbedSlot
+var grabbed_slot_data: SlotData
+
 
 func _ready():
+	GameplayEvent.player_added.connect(_on_player_added)
 	GameplayEvent.inventory_toggled.connect(_on_inventory_toggled)
 
 
+func _physics_process(_delta):
+	if grabbed_slot.visible:
+		grabbed_slot.global_position = get_global_mouse_position() + Vector2(5, 5)
+
+
+func _on_player_added(peer_id):
+	if peer_id == multiplayer.get_unique_id():
+		set_player_inventory_data(GameplayEvent.player.inventory_data)
+
+
 func _on_inventory_toggled():
 	visible = not visible
 	if visible:
 		PlayerInput.lock()
 	else:
 		PlayerInput.unlock()
+
+
+func set_player_inventory_data(inventory_data: InventoryData):
+	inventory_data.inventory_interacted.connect(_on_inventory_interacted)
+	player_inventory.set_player_inventory_data(inventory_data)
+
+
+func _on_inventory_interacted(inventory_data: InventoryData, index: int, button: int):
+	match [grabbed_slot_data, button]:
+		[null, MOUSE_BUTTON_LEFT]:
+			grabbed_slot_data = inventory_data.grab_slot_data(index)
+		[_, MOUSE_BUTTON_LEFT]:
+			grabbed_slot_data = inventory_data.drop_slot_data(grabbed_slot_data, index)
+		[null, MOUSE_BUTTON_RIGHT]:
+			pass
+		[_, MOUSE_BUTTON_RIGHT]:
+			grabbed_slot_data = inventory_data.drop_single_slot_data(grabbed_slot_data, index)
+
+	update_grabbed_slot()
+
+
+func update_grabbed_slot():
+	if grabbed_slot_data:
+		grabbed_slot.show()
+		grabbed_slot.set_slot_data(grabbed_slot_data)
+	else:
+		grabbed_slot.hide()
diff --git a/scenes/ui/slot.gd b/scenes/ui/slot.gd
index 8a01d96..925ce82 100644
--- a/scenes/ui/slot.gd
+++ b/scenes/ui/slot.gd
@@ -13,6 +13,8 @@ func set_slot_data(slot_data: SlotData) -> void:
 	if slot_data.quantity > 1:
 		quantity_label.text = "x%s" % slot_data.quantity
 		quantity_label.show()
+	else:
+		quantity_label.hide()
 
 
 func _on_gui_input(event: InputEvent):
